{
  "Hero": {
    "description": "Currently working full-time as a Frontend Developer at Hubra",
    "MenuItem1": "Work",
    "MenuItem2": "Stack",
    "MenuItem3": "About",
    "MenuItem4": "Contact"
  },
  "FormErrors": {
    "nameRequired": "Name is required",
    "nameMinLength": "Name must be at least 2 characters",
    "nameMaxLength": "Name can be maximum 15 characters",
    "emailRequired": "Email is required",
    "messageRequired": "Message is required",
    "messageMinLength": "Message must be at least 10 characters",
    "messageMaxLength": "Message can be maximum 500 characters",
    "successMessage": "Message has been sent",
    "DEFAULT_API_ROUTE_MAILER_ERROR": "An unexpected error occurred",
    "TOO_MANY_REQUESTS_FROM_IP_ERROR": "You have sent too many requests"
  },
  "FormPlaceholders": {
    "name": "Name",
    "email": "Email",
    "message": "Message",
    "button": "submit"
  },
  "ContactSection": {
    "title": "Let's connect",
    "paragraph": "Want to discuss web technologies, have a question about my projects, or perhaps an interesting collaboration proposal? Feel free to use the contact form nearby or reach out to me directly at: "
  },
  "AboutSection": {
    "title": "About",
    "paragraph1": "Hi, I'm Paweł, a Software Engineer with over 5 years of commercial IT experience, including 3+ years focused on frontend development. My primary domain is modern frontend, particularly within the React ecosystem. Day-to-day, I build solutions that effectively blend a creative approach with real business needs and an excellent user experience.",
    "paragraph2": "Having worked both in full-time roles and on freelance projects, I've had the opportunity to tackle a wide spectrum of tasks – from building complex SPA/SSR interfaces and integrating with backends and cloud services, to implementing comprehensive WordPress solutions featuring custom functionalities. My previous experience, including time in technical support, taught me to view products from the user's perspective and diagnose issues effectively, which significantly benefits my work today.",
    "paragraph3": "I continuously track the dynamic evolution of frontend technologies. For me, combining high technical quality – clean code, performance, and security – with an outstanding user experience is crucial. That's why I focus on modern design, intuitiveness, and engaging interactions, creating applications that are not only reliable and scalable but also visually appealing."
  },
  "StackSection": {
    "title": "Stack",
    "paragraph1": "I specialize in developing modern web applications within the React ecosystem, primarily using Next.js and TypeScript. Beyond the frontend, I also work with backend technologies and both SQL and NoSQL databases. For managing infrastructure, APIs, and authorization, I leverage various solutions such as Supabase, AWS, Firebase, and Vercel.",
    "paragraph2": "I also develop websites and online stores within the WordPress and PHP ecosystem, focusing on their security, performance, and SEO. Depending on project requirements, I also create custom Gutenberg blocks using React and PHP, as well as dedicated scripts, plugins, and extensions."
  },
  "WorkSection": {
    "title": "Work",
    "paragraph1": "Below are some selected projects that showcase my approach to building modern web applications. Click on the interactive preview to explore the details and technologies used. If you'd like to learn more about my experience, including commercial work, feel free to contact me."
  },
  "PinSectionForm": {
    "InputName": "Enter your nick",
    "ModalLabel": "Add a pin",
    "AddBtn": "Add",
    "CancelBtn": "Cancel",
    "EmptyInput": "Field is required",
    "PIN_NAME_TOO_LONG": "Pin name is too long (max 6 characters)",
    "PIN_ALREADY_EXISTS": "Pin with this name already exists",
    "PIN_CONTAINS_FORBIDDEN_WORDS": "Pin name contains forbidden words",
    "UNKNOWN_ERROR": "An unexpected error occurred",
    "PIN_ALREADY_ADDED_BY_IP": "You have already added a pin"
  },

  "SingleProjectPage": {
    "description": "description",
    "buttonTitle": "visit github",
    "previousProjectTitle": "previous ",
    "nextProjectTitle": "next ",
    "projects": {
      "1": {
        "title": "WorkFlow Pro",
        "description": "Workflow Pro is a custom web application that I developed from the ground up. It serves as a tool for tracking work time on projects and managing them, but with a strong social component. The primary motivation was to offer a solution that supports collaboration and information flow within teams, particularly those with looser structures, such as open-source projects, where clear insight into work progress and individual involvement is often lacking. I managed the project end-to-end – from the conceptual phase and UI design, through application architecture, to the frontend and backend (BaaS) implementation and deployment. The application was built using React with TypeScript. Its backend relies entirely on Google Firebase services, including Firestore as the NoSQL database (where I modeled relationships between users, projects, and time entries) and Firebase Authentication for managing authentication. Key functionalities include creating projects, precisely tracking time spent on tasks within those projects, and a social aspect: users can see who is assigned to a project and who is actively working on it, promoting transparency. I also implemented a simple commenting system within projects to facilitate basic communication. Although the project wasn't intended for commercial use, its development provided valuable experience, including: using TypeScript with React, BaaS integration, state management, and real-time data handling. The result is a fully functional prototype of a useful tool that fulfills the concept of social work time tracking.",
        "demoButtonTitle": "show demo",
        "githubButtonTitle": "visit github"
      },
      "2": {
        "title": "Team Members Plugin",
        "description": "The Team Members Plugin project involved two closely interconnected phases: creating a commercial WordPress plugin for managing team members and building a sales platform in Next.js for its distribution. The goal was to develop a market-ready plugin and implement a system enabling its purchase and license management. I was responsible for the entire endeavor, starting from the development of the WordPress plugin itself – implemented as a Gutenberg block using React, allowing intuitive addition and management of team profiles directly from the WP admin panel – all the way to designing and implementing the sales application using Next.js (App Router) with TypeScript. The sales platform included not only the product landing page but also a complete user system (registration, login, dashboard) and payment integration. A key technical challenge was managing the flow of data and events between different systems: I utilized Supabase for the backend (PostgreSQL database and authentication) and Stripe for handling payments. The automation of the purchase process is worth mentioning: I configured Supabase Webhooks which, upon new user registration (when a record was added to the database), automatically created a customer account for them in Stripe. Then, using Supabase Realtime Channels, the application listened for confirmation of the Stripe customer creation to seamlessly redirect the user to the payment process or directly to the dashboard if they already had an active subscription. On the Stripe side, I implemented Webhooks listening for payment completion events, which updated the user's subscription status in the Supabase database, unlocking their access to download the purchased plugin from their dashboard. The Next.js architecture utilized both Server Actions and API Routes for communication with the backend and external services. For building the interface, I used Tailwind CSS and the Accordion component from the Shadcn/ui library. This project demonstrates the ability to build complex, full-stack applications, integrate multiple external services (Auth, DB, Payments), handle asynchronous data flows (Webhooks, Realtime), and work with modern front-end and back-end technologies, creating a functional e-commerce solution.",
        "demoButtonTitle": "show demo",
        "githubButtonTitle": "visit github"
      },
      "3": {
        "title": "Hubra.com.pl",
        "description": "In this project, I was responsible for developing and implementing a new website for Hubra.com.pl, a company in the renewable energy sector. The project's goal was to replace the existing builder-based website to improve the user experience (UX), enable the client's team to manage content independently, and increase the conversion rate. I handled the entire process: from requirements analysis, through WordPress environment setup and implementation using a Kadence child theme, to optimization and deployment. Key features, such as dynamic landing pages, job offers, and project portfolios, were based on a structure of Custom Post Types (CPT) and Custom Fields, which provided flexibility and ease of data management. I created dedicated templates to display them on the site. To further streamline content editing, I also developed specific Gutenberg editor blocks using React – an example being the functionality for easily adding and managing team members. The scope of work also included implementing additional logic in PHP, configuring form submissions (SMTP), and implementing basic server-side security practices. During development, I placed a strong emphasis on ensuring full responsiveness (RWD) and performance optimization, which resulted in scores above 90% in PageSpeed Insights and an A grade in GTmetrix. The new website brought tangible benefits: a conversion increase of over 30%, improved SEO, easier navigation, and a streamlined process for acquiring customer inquiries.",
        "demoButtonTitle": "show website",
        "githubButtonTitle": "visit github"
      },
      "4": {
        "title": "DevHireNet",
        "description": "The goal of this project was to create a functional job board that would allow users to browse, filter, and save interesting job offers. I handled the entire process – from concept, through interface design, to the implementation and deployment of both the frontend and backend. The frontend application was built using React, utilizing Tailwind CSS for styling and React Router for client-side routing management. A key element of the project was the implementation of the backend using a serverless architecture on the AWS platform. I used the AWS Amplify service for managing user authentication (registration, login). In the initial phase of the project, some data was stored locally; however, in version 1.1, I introduced a significant improvement by storing user-specific data (like favorite job offers) in a dedicated NoSQL database – AWS DynamoDB. Data access and business logic were implemented through a custom API built with AWS API Gateway, which integrated AWS Lambda functions written in Node.js. The platform offered users several functionalities: advanced filtering of offers (by job level, company, required technologies), a system for saving favorite listings with notifications for better UX, dark mode, and loading indicators during data fetching. The project was created following a mobile-first approach and is fully responsive (RWD), ensuring optimal performance across various devices. (Important note: Due to the costs of maintaining cloud infrastructure, the active AWS services for this project are currently disabled, meaning the live demo is unavailable. However, the project's public code repository is accessible.).",
        "demoButtonTitle": "show demo",
        "githubButtonTitle": "visit github"
      },
      "5": {
        "title": "pawelbilski.com",
        "description": "pawelbilski.com is the new version of my portfolio, which I designed and implemented from scratch, with a special focus on modern solutions and attention to visual and interactive details. The goal was to create not just an informational showcase, but also a dynamic and engaging application. I was responsible for its entire creation process – from concept, through design (UI/UX), to full-stack implementation within the Next.js ecosystem. The website was built using Next.js (App Router) and TypeScript, fully leveraging its capabilities such as Server-Side Rendering (SSR), Server Actions (e.g., for handling the interactive 'pinning' section), and API Routes (e.g., for the contact form integrated with Nodemailer). A key element of the project is the advanced use of the GSAP library, especially the ScrollTrigger module, to create smooth, scroll-linked animations, including section scrolling effects and dynamic Marquees. A particular technical and time-consuming challenge was implementing the interactive 3D model using React Three Fiber (R3F) and the Drei library, which required optimization and precise management of the 3D object's animation upon user interaction. The interactive 'pinning' section allows visitors to leave a pin, which is saved to and read from a Vercel Postgres database. I used Tailwind CSS for styling. The site is fully responsive (RWD), supports multi-language (i18n), and offers a dark/light mode toggle (both functionalities based on cookies/localStorage). I also implemented basic IP-based bot protection on the contact form and pin submission. This project demonstrates the practical application of the technologies listed in the stack, combining aesthetics with user interface performance. It covers frontend integration with the backend and database, and solving complex implementation challenges, such as application logic, advanced animations or rendering 3D graphics in the browser.",
        "demoButtonTitle": "show website",
        "githubButtonTitle": "visit github"
      }
    }
  }
}
